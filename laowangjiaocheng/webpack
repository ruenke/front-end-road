webpack安装方式：
1、全局安装(不建议此安装方法)
  npm install webpack  webpack-cli -g//全局安装webpack
  npm uninstall webpack web pack-cli -g //全局卸载webpack

2、局部安装web pack（项目内安装webpack）
    npm install webpack(webpack-cli)  —save-dev / nom install webpack webpack-cli -D

3、npx webpack -v //在当前项目里的node-modules里找webpack版本

4、npm info webpack//查看webpack信息

5、nom install  webpack@4.2.2  web pack-cli -D //安装指定版本为4.2.2的webpack


webpack配置文件：
1、webpack默认的配置文件：webpack.config.js

2、打包流程：当在项目中直接输入npx webpack时，webpack并不知道自己该怎么去打包，它就会去找默认的配置文件webpack.config.js，然后就知道了怎么打包怎么输出，帮你完成打包  过程

3、如果配置文件名不以默认的配置文件名请执行：npx webpack —config   xx 

4、npm scripts:  npm run bundle:执行的是package.json里的bundel命令， package.json里的webpack命令先到工程里的node_modules目录下找webpack,原理和npx很类似

5、执行打包命令的三种场景：
    1）全局安装webpack时（global）： webpack index.js;
    2)   局部安装时（local）：npx webpack  index.js;
    3) npm scripts: npm run dev/start => webpack

6、webpack-cli这个包使得我们在命令行里使用webpack的命令

Webpack输出信息：
￼
1、Hash：本次打包唯一的一个hash值
2、Version：webpack版本；
3、Time：打包耗时；
4、Asset：打包出一个app.js文件
5、Size：打包出的文件大小
6、Chunks：相关打包文件的id；
7、Chunk Names：相关打包文件的名称
8、Chunk Names(main): 
       entry:'./src/index.js’是 entry:{ main:'./src/index.js’}的简写；
9、Entrypoint：入口文件
10、mode:不设置的话默认是production,production打包出来的是压缩的代码，development是不被压缩的；


Loader
1、loader:loader其实就是一个打包方案，它知道对某一个特定的文件webpack该如何去打包webpack本身又不知道该如何打包非js类型的文件，webpack会去求助loader
2、flie-loader与url-loader的区别：url-loader会比file-loader多一个limit配置参数，url-loader会默认将图片打包成base64放在打包好的输出js文件里，这样的好处：减少了一次图片的http请求；坏处是：如果图片过大的话会导致输出的js文件过大，加载时间变长，通常的处理方法是：一些不超过2kb（2048字节）的icon可以直接打包到输出的js文件里，大于2kb的图片可以打包到images文件下，此时只需在options下配置limit：2048
3、打包CSS文件时一般需要用到两个loader，所以use里面就不能用对象了，要用数组
    a、数组：use:['style-loader','css-loader']
    b、对像：use:{
                              // loader:'file-loader',
                              loader:'url-loader',
                             options:{
                                //这种配置的语法叫做placeholder(占位符)
                                name:'[name]_[hash].[ext]',//新打包出来的图片名字：老的图片名字的后缀 + 老的图片的后缀
                                outputPath:'images/',//将图片打包生产到dist文件夹下的images文件夹下面,
                                limit:10240
                              }
                          }
4、css-loader:会分析出几个CSS文件的依赖关系，最终合并成一个CSS文件；
5、style-loader:在得到css-loader生成的css内容之后，它会将得到的内容挂在到页面的heder部分；
6、解析scss样式文件时需要依赖sass-loader，sass-loder需要安装 sass-loader 和 node-sass这两个文件；
7、webpack里loader是有执行顺序的：从下往上，从右往左的顺序；
8、postcss-loader:给css样式添加特定前缀（如webkit)它需要一个特定的js文件（postcss.config.js) ,需要一个plugins：autoprefixer